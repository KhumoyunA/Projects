{"ast":null,"code":"import { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nclass AuthService {\n  login(form) {\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, form.email, form.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      alert('Success!');\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      alert('Sorry, we are not able to find the user you are requesting');\n    }).finally(() => this.isLoading = false);\n  }\n  register() {}\n  constructor() {\n    this.isAuthenticated = false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["getAuth","signInWithEmailAndPassword","AuthService","login","form","auth","email","password","then","userCredential","user","alert","catch","error","errorCode","code","errorMessage","message","finally","isLoading","register","constructor","isAuthenticated","factory","ɵfac","providedIn"],"sources":["C:\\Users\\khumo\\Desktop\\angular\\learn-ang\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isAuthenticated: boolean = false;\n\n  login(form) {\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, form.email, form.password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        alert('Success!');\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        alert('Sorry, we are not able to find the user you are requesting');\n      }).finally(() => (this.isLoading = false));\n  }\n\n  register() {\n\n  }\n  constructor() { }\n}\n"],"mappings":"AACA,SAASA,OAAO,EAAEC,0BAA0B,QAAQ,eAAe;;AAEnE,MAGaC,WAAW;EAGtBC,KAAKA,CAACC,IAAI;IACR,MAAMC,IAAI,GAAGL,OAAO,EAAE;IACtBC,0BAA0B,CAACI,IAAI,EAAED,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,QAAQ,CAAC,CACxDC,IAAI,CAAEC,cAAc,IAAI;MACvB;MACA,MAAMC,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChCC,KAAK,CAAC,UAAU,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAI;MACf,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCN,KAAK,CAAC,4DAA4D,CAAC;IACrE,CAAC,CAAC,CAACO,OAAO,CAAC,MAAO,IAAI,CAACC,SAAS,GAAG,KAAM,CAAC;EAC9C;EAEAC,QAAQA,CAAA,GAER;EACAC,YAAA;IApBA,KAAAC,eAAe,GAAY,KAAK;EAoBhB;;AArBLpB,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAqB,OAAA,EAAXrB,WAAW,CAAAsB,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPvB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}