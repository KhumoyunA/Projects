{"ast":null,"code":"import { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass AuthService {\n  constructor(router) {\n    this.router = router;\n    this.isAuthenticated = false;\n    this.isLoading = false;\n    this.isRegLoading = false;\n    this.isaMatch = true;\n  }\n  login(form) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, form.email, form.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      this.isAuthenticated = true;\n      this.router.navigate(['']);\n    }).catch(error => {\n      const errorCode = error.code;\n      this.isAuthenticated = false;\n      const errorMessage = error.message;\n      alert('Sorry, we are not able to find the user you are requesting');\n    }).finally(() => this.isLoading = false);\n  }\n  register(regForm) {\n    if (regForm.password != regForm.confirmPassword) {\n      this.isaMatch = false;\n      return;\n    }\n    if (this.isRegLoading) return;\n    this.isRegLoading = true;\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, regForm.email, regForm.password).then(userCredential => {\n      // Signed in \n      // const user = userCredential.user;\n      this.isAuthenticated = true;\n      // ...\n    }).catch(error => {\n      this.isAuthenticated = false;\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // ..\n    }).finally(() => this.isRegLoading = false);\n  }\n  logout() {\n    const auth = getAuth();\n    signOut(auth).then(() => {\n      this.router.navigate(['login']);\n    }).catch(error => {});\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.Router));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthService };","map":{"version":3,"names":["createUserWithEmailAndPassword","getAuth","signInWithEmailAndPassword","signOut","AuthService","constructor","router","isAuthenticated","isLoading","isRegLoading","isaMatch","login","form","auth","email","password","then","userCredential","user","navigate","catch","error","errorCode","code","errorMessage","message","alert","finally","register","regForm","confirmPassword","logout","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\khumo\\Desktop\\angular\\learn-ang\\src\\app\\auth\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { createUserWithEmailAndPassword, getAuth, reauthenticateWithCredential, signInWithEmailAndPassword, signOut } from 'firebase/auth';\nimport { LogInForm } from '../types/auth';\nimport { RegisterForm } from '../types/register';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  isAuthenticated: boolean = false;\n  isLoading: boolean = false;\n  isRegLoading: boolean = false;\n  isaMatch: boolean = true;\n\n\n  constructor(private router: Router) {\n  }\n\n  login(form: LogInForm) {\n    if (this.isLoading) return;\n    this.isLoading = true;\n    const auth = getAuth();\n    signInWithEmailAndPassword(auth, form.email, form.password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n        this.isAuthenticated = true;\n        this.router.navigate(['']);\n        \n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        this.isAuthenticated = false;\n        const errorMessage = error.message;\n        alert('Sorry, we are not able to find the user you are requesting');\n      }).finally(() => (this.isLoading = false));\n  }\n\n  register(regForm: RegisterForm) {\n    if (regForm.password != regForm.confirmPassword) {\n      this.isaMatch = false;\n      return;\n    }\n\n    if (this.isRegLoading) return;\n    this.isRegLoading = true;\n\n\n    const auth = getAuth();\n    createUserWithEmailAndPassword(auth, regForm.email, regForm.password)\n    .then((userCredential) => {\n      // Signed in \n      // const user = userCredential.user;\n      this.isAuthenticated = true;\n      // ...\n    })\n    .catch((error) => {\n      this.isAuthenticated = false;\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // ..\n    }).finally(() => (this.isRegLoading = false));\n    }\n\n    logout() {\n      const auth = getAuth();\n      signOut(auth).then(() => {\n        this.router.navigate(['login']);\n      }).catch((error) => {\n\n      });\n\n    }\n}\n"],"mappings":"AACA,SAASA,8BAA8B,EAAEC,OAAO,EAAgCC,0BAA0B,EAAEC,OAAO,QAAQ,eAAe;;;AAK1I,MAGaC,WAAW;EAOtBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAN1B,KAAAC,eAAe,GAAY,KAAK;IAChC,KAAAC,SAAS,GAAY,KAAK;IAC1B,KAAAC,YAAY,GAAY,KAAK;IAC7B,KAAAC,QAAQ,GAAY,IAAI;EAIxB;EAEAC,KAAKA,CAACC,IAAe;IACnB,IAAI,IAAI,CAACJ,SAAS,EAAE;IACpB,IAAI,CAACA,SAAS,GAAG,IAAI;IACrB,MAAMK,IAAI,GAAGZ,OAAO,EAAE;IACtBC,0BAA0B,CAACW,IAAI,EAAED,IAAI,CAACE,KAAK,EAAEF,IAAI,CAACG,QAAQ,CAAC,CACxDC,IAAI,CAAEC,cAAc,IAAI;MACvB;MACA,MAAMC,IAAI,GAAGD,cAAc,CAACC,IAAI;MAChC,IAAI,CAACX,eAAe,GAAG,IAAI;MAC3B,IAAI,CAACD,MAAM,CAACa,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;IAE5B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAI;MACf,MAAMC,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,IAAI,CAAChB,eAAe,GAAG,KAAK;MAC5B,MAAMiB,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClCC,KAAK,CAAC,4DAA4D,CAAC;IACrE,CAAC,CAAC,CAACC,OAAO,CAAC,MAAO,IAAI,CAACnB,SAAS,GAAG,KAAM,CAAC;EAC9C;EAEAoB,QAAQA,CAACC,OAAqB;IAC5B,IAAIA,OAAO,CAACd,QAAQ,IAAIc,OAAO,CAACC,eAAe,EAAE;MAC/C,IAAI,CAACpB,QAAQ,GAAG,KAAK;MACrB;;IAGF,IAAI,IAAI,CAACD,YAAY,EAAE;IACvB,IAAI,CAACA,YAAY,GAAG,IAAI;IAGxB,MAAMI,IAAI,GAAGZ,OAAO,EAAE;IACtBD,8BAA8B,CAACa,IAAI,EAAEgB,OAAO,CAACf,KAAK,EAAEe,OAAO,CAACd,QAAQ,CAAC,CACpEC,IAAI,CAAEC,cAAc,IAAI;MACvB;MACA;MACA,IAAI,CAACV,eAAe,GAAG,IAAI;MAC3B;IACF,CAAC,CAAC,CACDa,KAAK,CAAEC,KAAK,IAAI;MACf,IAAI,CAACd,eAAe,GAAG,KAAK;MAC5B,MAAMe,SAAS,GAAGD,KAAK,CAACE,IAAI;MAC5B,MAAMC,YAAY,GAAGH,KAAK,CAACI,OAAO;MAClC;IACF,CAAC,CAAC,CAACE,OAAO,CAAC,MAAO,IAAI,CAAClB,YAAY,GAAG,KAAM,CAAC;EAC7C;EAEAsB,MAAMA,CAAA;IACJ,MAAMlB,IAAI,GAAGZ,OAAO,EAAE;IACtBE,OAAO,CAACU,IAAI,CAAC,CAACG,IAAI,CAAC,MAAK;MACtB,IAAI,CAACV,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAI,CAEnB,CAAC,CAAC;EAEJ;;AAhESjB,WAAW,C;mBAAXA,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAX/B,WAAW,C;SAAXA,WAAW;EAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;EAAAC,UAAA,EAFV;AAAM;SAEPlC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}