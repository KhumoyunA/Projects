{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegisterComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Email must be valid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Password must be valid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵtext(1, \" Confirm Password must be valid \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RegisterComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Loading...\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction RegisterComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nclass RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.regForm = {\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n  register() {\n    this.authService.register(this.regForm);\n  }\n  isLoading() {\n    return this.authService.isRegLoading;\n  }\n}\nRegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n  return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n};\nRegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterComponent,\n  selectors: [[\"app-register\"]],\n  decls: 27,\n  vars: 9,\n  consts: [[1, \"flex\", \"m-auto\", \"h-screen\", \"justify-center\"], [1, \"p-4\", \"rounded-lg\", \"border-2\", \"m-auto\", 3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"text-center\", \"text-xl\"], [1, \"my-5\", \"w-full\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"required\", \"\", \"name\", \"email\", 1, \"p-2\", \"rounded\", \"w-full\", \"border\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"class\", \"p-1 text-center bg-red-300 text-red-800 rounded\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"required\", \"\", \"id\", \"password\", \"name\", \"password\", 1, \"p-2\", \"rounded\", \"w-full\", \"border\", 3, \"ngModel\", \"ngModelChange\"], [\"password\", \"ngModel\"], [\"type\", \"password\", \"required\", \"\", \"id\", \"password\", \"name\", \"confirm-password\", 1, \"p-2\", \"rounded\", \"w-full\", \"border\", 3, \"ngModel\", \"ngModelChange\"], [\"confirmPassword\", \"ngModel\"], [\"type\", \"submit\", 1, \"p-2\", \"w-full\", \"bg-green-900\", \"text-white\", \"hover:bg-green-600\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"p-1\", \"text-center\", \"bg-red-300\", \"text-red-800\", \"rounded\"]],\n  template: function RegisterComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(3, \"h1\", 3);\n      i0.ɵɵtext(4, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n      i0.ɵɵtext(7, \"E-mail\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.regForm.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, RegisterComponent_div_10_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 9);\n      i0.ɵɵtext(13, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.regForm.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\", 9);\n      i0.ɵɵtext(19, \"Confirm Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 12, 13);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.regForm.confirmPassword = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, RegisterComponent_div_22_Template, 2, 0, \"div\", 8);\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"button\", 14);\n      i0.ɵɵtemplate(25, RegisterComponent_ng_container_25_Template, 2, 0, \"ng-container\", 15);\n      i0.ɵɵtemplate(26, RegisterComponent_ng_container_26_Template, 2, 0, \"ng-container\", 15);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      const _r1 = i0.ɵɵreference(9);\n      const _r3 = i0.ɵɵreference(15);\n      const _r5 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.regForm.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.dirty || _r1.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.regForm.password);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r3.invalid && (_r3.dirty || _r3.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.regForm.confirmPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r5.invalid && (_r5.dirty || _r5.touched));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r0.form.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isLoading());\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isLoading());\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { RegisterComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerStart","ɵɵelementContainerEnd","RegisterComponent","constructor","authService","regForm","email","password","confirmPassword","register","isLoading","isRegLoading","ɵɵdirectiveInject","i1","AuthService","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_1_listener","RegisterComponent_Template_input_ngModelChange_8_listener","$event","ɵɵtemplate","RegisterComponent_div_10_Template","RegisterComponent_Template_input_ngModelChange_14_listener","RegisterComponent_div_16_Template","RegisterComponent_Template_input_ngModelChange_20_listener","RegisterComponent_div_22_Template","RegisterComponent_ng_container_25_Template","RegisterComponent_ng_container_26_Template","ɵɵadvance","ɵɵproperty","_r1","invalid","dirty","touched","_r3","_r5","_r0","form"],"sources":["C:\\Users\\khumo\\Desktop\\angular\\learn-ang\\src\\app\\auth\\register\\register.component.ts","C:\\Users\\khumo\\Desktop\\angular\\learn-ang\\src\\app\\auth\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { RegisterForm } from 'src/app/types/register';\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\n\n\nexport class RegisterComponent {\n  regForm: RegisterForm = {\n    email: '',\n    password: '',\n    confirmPassword: ''\n  };\n\n  constructor(private authService: AuthService) {}\n\n\n\n  register() {\n\n    this.authService.register(this.regForm);\n  }\n\n  isLoading() {\n    return this.authService.isRegLoading;\n  }\n\n}\n","<div class=\"flex m-auto h-screen justify-center\">\n    <form (ngSubmit)=\"register()\" #myForm=\"ngForm\" class=\"p-4 rounded-lg border-2 m-auto\">\n\n        <h1 class=\"text-center text-xl\">Register</h1>\n        <div class=\"my-5 w-full\">\n            <label for=\"email\">E-mail</label>\n            <input type=\"email\" id=\"email\" #email=\"ngModel\" required [(ngModel)]=\"regForm.email\" name=\"email\"  class=\"p-2 rounded w-full border\">\n        </div>\n        <div *ngIf=\"email.invalid && ( email.dirty || email.touched)\" class=\"p-1 text-center bg-red-300 text-red-800 rounded\">\n            Email must be valid\n        </div>\n\n        <div class=\"my-5 w-full\">\n            <label for=\"password\">Password</label>\n            <input type=\"password\" #password=\"ngModel\" required id=\"password\" [(ngModel)]=\"regForm.password\" name=\"password\" class=\"p-2 rounded w-full border\">\n        </div>\n        <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"p-1 text-center bg-red-300 text-red-800 rounded\">\n            Password must be valid\n        </div>\n\n        <div class=\"my-5 w-full\">\n            <label for=\"password\">Confirm Password</label>\n            <input type=\"password\" #confirmPassword=\"ngModel\" required id=\"password\" [(ngModel)]=\"regForm.confirmPassword\" name=\"confirm-password\" class=\"p-2 rounded w-full border\">\n        </div>\n        <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\" class=\"p-1 text-center bg-red-300 text-red-800 rounded\">\n            Confirm Password must be valid\n        </div>\n\n        <div class=\"my-5 w-full\">\n            <button type=\"submit\" [disabled]=\"myForm.form.invalid\" class=\"p-2 w-full bg-green-900 text-white hover:bg-green-600\">\n                <ng-container *ngIf=\"isLoading()\">Loading...</ng-container>\n                <ng-container *ngIf=\"!isLoading()\">Submit</ng-container>\n            </button>\n        </div>\n\n    </form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}